<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:osgi="http://www.springframework.org/schema/osgi" xmlns:oink="http://www.openeyes.org.uk/schema/oink"
	xmlns:spring-security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd  
       http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.openeyes.org.uk/schema/oink http://www.openeyes.org.uk/schema/oink/oink-1.0.xsd">

	<bean id="authenticator" class="uk.org.openeyes.oink.http.UserAuthenticator" />

	<bean id="identityService" class="uk.org.openeyes.oink.security.SimpleIdentityService" />

	<bean id="oinkHttpConverter" class="uk.org.openeyes.oink.http.OinkHttpConverter">
	</bean>

	<bean id="validator" class="uk.org.openeyes.oink.http.FhirJsonValidator" />

	<bean id="synchRabbitProcessor" class="uk.org.openeyes.oink.rabbit.SynchronousRabbitProcessor">
		<constructor-arg name="timeOut" value="5000"/>
	</bean>

	<bean id="routingService" class="uk.org.openeyes.oink.facade.SimpleRoutingService">
		<constructor-arg name="mappings">
			<oink:facadeRabbitMapper>
				<oink:mapping resource="Patient" method="POST"
					exchange="test" route="siteB" />
			</oink:facadeRabbitMapper>
		</constructor-arg>
		<constructor-arg name="replyRouting" value="siteAResponse"/>
	</bean>

	<bean id="rabbitProcessor" class="uk.org.openeyes.oink.rabbit.RabbitProcessor">
		<constructor-arg ref="routingService" />
	</bean>
	
	<bean id="echoer" class="uk.org.openeyes.oink.messaging.EchoResponder"/>

	<spring-security:authentication-manager
		id="authenticationManager">
		<spring-security:authentication-provider>
			<spring-security:user-service>
				<spring-security:user name="bob@ucc1" password="bob"
					authorities="ROLE_USER" />
			</spring-security:user-service>
		</spring-security:authentication-provider>
	</spring-security:authentication-manager>

	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="true" />
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
			</list>
		</property>
	</bean>

	<authorizationPolicy id="user"
		accessDecisionManager="accessDecisionManager" access="ROLE_USER"
		xmlns="http://camel.apache.org/schema/spring-security" />

	<camelContext xmlns="http://camel.apache.org/schema/spring">

		<!-- Route 1 (facade) -->
		<route>
			<from uri="jetty:http://localhost:8023/oink?matchOnUriPrefix=true" />
			<bean ref="authenticator" method="extractAuthenticationDetailsFromHttp" />
			<policy ref="user">
				<bean ref="oinkHttpConverter" method="buildOinkRequest" />
				<bean ref="validator" method="validateRequest" />
				<removeHeaders pattern="*"/>
				<bean ref="rabbitProcessor" method="setRabbitRouteHeaders" />
				<bean ref="synchRabbitProcessor" method="prepare" />
				<to uri="rabbitmq://localhost:5672/test?username=admin&amp;password=admin" />
				<bean ref="synchRabbitProcessor" method="waitForResponse" />
				<removeHeaders pattern="*"/>
				<bean ref="oinkHttpConverter" method="buildHttpResponse" />		
				<log message="Returning response over http"/>
			</policy>
		</route>

		<route>
			<from
				uri="rabbitmq://localhost:5672/test?username=admin&amp;password=admin&amp;queue=siteAResponse&amp;routingKey=siteAResponse" />
			<log message="Received response ${body}"/>
			<recipientList>
				<simple>seda:${headers.rabbitmq.CORRELATIONID}</simple>
			</recipientList>
		</route>

		<!-- Route 2 (proxy) -->
		<route>
			<from
				uri="rabbitmq://localhost:5672/test?username=admin&amp;password=admin&amp;queue=siteB&amp;routingKey=siteB" />
			<setHeader headerName="rabbitmq.ROUTING_KEY">
				<simple>${headers.rabbitmq.REPLY_TO}</simple>
			</setHeader>
			<bean ref="echoer"/>
			<to
				uri="rabbitmq://localhost:5672/test?username=admin&amp;password=admin" />
		</route>

		<!-- Route 3 (sample end server) -->
		<!-- <route> <from uri="jetty:http://localhost:8024?matchOnUriPrefix=true" 
			/> <setBody> <simple>Hello World</simple> </setBody> </route> -->
	</camelContext>

</beans>
