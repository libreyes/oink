package uk.org.openeyes.oink.modules.silverlink;

import java.nio.charset.Charset;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;

import uk.org.openeyes.oink.domain.OINKRequestMessage;
import uk.org.openeyes.oink.domain.OINKResponseMessage;


/**
 * POJO handler that receives oink requests for silverlink services and sends back an oink response.  Main application
 * Silverlink logic starts here.
 * 
 * @author Oliver Wilkie
 *
 */
public class SilverlinkHandler {

	private SilverlinkPatientService patientService;
	private SilverlinkAppointmentService appointmentService;
	
	public SilverlinkHandler(SilverlinkPatientService patientService,
			SilverlinkAppointmentService appointmentService) {
		this.patientService = patientService;
		this.appointmentService = appointmentService;
	}	
	
	public OINKResponseMessage handle(OINKRequestMessage request) {
		String message = "Hello World!! This text message was generated by the SilverlinkHandler and returned over a Rabbit broker to the OINK Facade.";
		HttpHeaders headers = new HttpHeaders();
		byte[] body = message.getBytes(Charset.forName("UTF-8"));
		headers.setContentType(MediaType.TEXT_PLAIN);
		headers.setContentLength(body.length);
		return new OINKResponseMessage(HttpStatus.ACCEPTED, headers, body);
	}

}
